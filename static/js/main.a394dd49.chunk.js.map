{"version":3,"sources":["components/Addform.js","components/Todoitem.js","components/Todolist.js","App.js","index.js"],"names":["AddForm","addTask","useState","value","setValue","className","onSubmit","e","preventDefault","alert","htmlFor","style","color","type","name","onChange","target","Todoitem","id","completed","handleDblClick","deleteTask","borderLeft","onDoubleClick","textDecoration","disabled","onClick","Todolist","tasks","setTasks","isLoading","setIsLoading","a","getSingleTask","task","fetch","method","headers","body","JSON","stringify","newTasks","map","taskName","res","json","data","taskId","filter","getTasks","useEffect","textAlign","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a394dd49.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './Addform.css'\r\n\r\nconst AddForm = ({addTask}) => {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!value){\r\n            alert('Please enter a task')\r\n            return\r\n        }\r\n        \r\n        addTask(value)\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"addForm\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\" style={{color: '#fff'}}><small>Add Task</small></label>\r\n                <input type=\"text\" name=\"todo\" value={value} onChange={handleChange}/>\r\n                <input type=\"submit\" value=\"Add todo\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default AddForm;","import './Todoitem.css'\r\n\r\nconst Todoitem = ({id, name, completed, handleDblClick, deleteTask}) => {\r\n\r\n    const handleClick = () => {\r\n        handleDblClick(id)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todoitem\" style={completed ? { borderLeft: '5px #000 solid' } : { borderLeft: 'none' }} onDoubleClick={handleClick}>\r\n            <p style={completed ? { textDecoration: 'line-through' } : { textDecoration: 'none' }} disabled={completed}>{name}</p>\r\n            <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Todoitem;","import { useState, useEffect } from 'react'\r\nimport './Todolist.css';\r\nimport AddForm from './Addform'\r\nimport Todoitem from './Todoitem'\r\n\r\nconst Todolist = () => {\r\n\r\n    const [tasks, setTasks] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const handleDblClick = async (id) => {\r\n        const task = await getSingleTask(id)\r\n        \r\n        const res = fetch(`http://localhost:8000/todos/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({...task, completed: true})\r\n        })\r\n\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id){\r\n                return {...task, completed: true}\r\n            }\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const addTask = async (taskName) => {\r\n\r\n        const res = await fetch('http://localhost:8000/todos',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({name: taskName, completed: false})\r\n        })\r\n        \r\n        const data = await res.json()\r\n        setTasks([...tasks, data])\r\n    }\r\n\r\n    const deleteTask = async (taskId) => {\r\n\r\n        const res = await fetch(`http://localhost:8000/todos/${taskId}`, {\r\n            method: 'DELETE'\r\n        })\r\n        const newTasks = tasks.filter(task => {\r\n            return task.id !== taskId\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n\r\n        const res = await fetch('http://localhost:8000/todos')\r\n        const data = await res.json()\r\n\r\n        setTasks(data)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const getSingleTask = async (id) => {\r\n        const res = await fetch(`http://localhost:8000/todos/${id}`)\r\n        return res.json()\r\n    }\r\n\r\n    useEffect(() => {getTasks()}, [])\r\n\r\n    return (\r\n        <div className=\"TodoList\">\r\n\r\n            <div id=\"todo-header\">\r\n                <h1>React Todo List</h1>\r\n            </div>\r\n\r\n            <AddForm addTask={addTask}/>\r\n\r\n            {isLoading && <p style={{textAlign:'center'}}>Loading...</p>}\r\n            {tasks && (tasks.length === 0 ? <h3>No todos yet ðŸ“„</h3> : tasks.map(task=> (<Todoitem \r\n                key={task.id} \r\n                id={task.id} \r\n                name={task.name} \r\n                completed={task.completed} \r\n                handleDblClick={handleDblClick} \r\n                deleteTask={deleteTask}\r\n            />))) }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Todolist;","import Todolist from './components/Todolist'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Todolist />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}